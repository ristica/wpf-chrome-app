<UserControl x:Class="Chrome.Views.ShellUserControls.SideBarLeftUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Chrome.Views.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             DataContext="{Binding}">
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToVisibilityReverseConverter x:Key="BoolToVisibilityReverseConverter" />
        <converters:ListToVisibilityConverter x:Key="ListToVisibilityConverter" />
        <converters:BoolToSideBarWidthReverseConverter x:Key="BoolToSideBarWidthReverseConverter" />
    </UserControl.Resources>

    <Border Background="{StaticResource DefaultBrush}"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="4"
            Margin="1"
            Width="{Binding ViewModel.IsLeftBarExpanded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToSideBarWidthReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
        <Grid>
            <Grid HorizontalAlignment="Right"
                  Margin="0,0,6,0"
                  Visibility="{Binding ViewModel.Customers, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ListToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <materialDesign:PackIcon Kind="ChevronDoubleRight"
                                         Background="{StaticResource DefaultBrush}"
                                         Foreground="#a9a9"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Top"
                                         Height="24"
                                         Width="24"
                                         Margin="4,10,4,0"
                                         Padding="0"
                                         Cursor="Hand"
                                         ToolTip="Expand"
                                         Visibility="{Binding ViewModel.IsLeftBarExpanded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ToggleLeftBarCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </materialDesign:PackIcon>
                <materialDesign:PackIcon Kind="ChevronDoubleLeft"
                                         Background="{StaticResource DefaultBrush}"
                                         Foreground="#a9a9"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Top"
                                         Height="24"
                                         Width="24"
                                         Margin="4,10,4,0"
                                         Padding="0"
                                         Cursor="Hand"
                                         ToolTip="Expand"
                                         Visibility="{Binding ViewModel.IsLeftBarExpanded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ToggleLeftBarCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </materialDesign:PackIcon>
            </Grid>

            <ItemsControl ItemsSource="{Binding ViewModel.Customers, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                          VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Background="{StaticResource DefaultBrush}"
                                BorderBrush="#666"
                                BorderThickness="1"
                                CornerRadius="4"
                                Margin="4"
                                HorizontalAlignment="Stretch"
                                Height="32"
                                Cursor="Hand"
                                Style="{StaticResource ToLightAnimatedBorder}"
                                ToolTip="{Binding FirstName}">
                            <materialDesign:PackIcon Kind="AccountClockOutline"
                                                     Foreground="#666"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     Height="20"
                                                     Width="20"
                                                     Margin="6,0,0,0" />
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <materialDesign:PackIcon Kind="ToggleSwitchOutline"
                                     Background="{StaticResource DefaultBrush}"
                                     Foreground="#a9a9"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom"
                                     Height="24"
                                     Width="24"
                                     Margin="4,0,8,10"
                                     Padding="0"
                                     Cursor="Hand"
                                     ToolTip="{Loc HideStatusBar}"
                                     Visibility="{Binding ViewModel.IsBottomBarVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ToggleBottomBarCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </materialDesign:PackIcon>
            <materialDesign:PackIcon Kind="ToggleSwitchOffOutline"
                                     Background="{StaticResource DefaultBrush}"
                                     Foreground="#a9a9"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom"
                                     Height="24"
                                     Width="24"
                                     Margin="4,0,8,10"
                                     Padding="0"
                                     Cursor="Hand"
                                     ToolTip="{Loc ShowStatusBar}"
                                     Visibility="{Binding ViewModel.IsBottomBarVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ToggleBottomBarCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </materialDesign:PackIcon>

        </Grid>
    </Border>
</UserControl>