<UserControl x:Class="Chrome.Views.ShellUserControls.TopBarUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Chrome.Views.Converters"
             Height="43"
             DataContext="{Binding}">
    <UserControl.Resources>
        <converters:WindowStateToVisibilityConverter x:Key="WindowStateToVisibilityConverter" />
        <converters:WindowStateToVisibilityReverseConverter x:Key="WindowStateToVisibilityReverseConverter" />
        <converters:ResizeModeToVisibilityConverter x:Key="ResizeModeToVisibilityConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Border x:Name="PART_ChromeTitleBar"
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                Background="{StaticResource DefaultBrush}"
                BorderBrush="Transparent"
                BorderThickness="1"
                CornerRadius="4"
                Margin="47,1,1,1">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction
                        Command="{Binding ViewModel.DragCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid HorizontalAlignment="Stretch">
                <TextBlock VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Margin="15,0,0,0"
                           Foreground="#fff">
                    CRM Light
                </TextBlock>
            </Grid>
        </Border>

        <StackPanel Grid.Row="0"
                    Grid.Column="1"
                    Orientation="Horizontal"
                    Margin="2">
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="4"
                    Width="42"
                    Margin="0,0,4,0"
                    Padding="0,0,0,5"
                    ToolTip="{Loc MinimizeWindow}"
                    Cursor="Hand"
                    Style="{StaticResource ToLightAnimatedBorder}">
                <materialDesign:PackIcon Kind="WindowMinimize"
                                         Foreground="#ddd"
                                         VerticalAlignment="Bottom"
                                         HorizontalAlignment="Center" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="4"
                    Width="42"
                    Margin="0,0,4,0"
                    Cursor="Hand"
                    ToolTip="{Loc MaximizeWindow}"
                    Style="{StaticResource ToLightAnimatedBorder}"
                    Visibility="{Binding ViewModel.ResizeMode, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource ResizeModeToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <Grid>
                    <materialDesign:PackIcon Kind="WindowMaximize"
                                             Foreground="#ddd"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Width="25"
                                             Height="25"
                                             Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    <materialDesign:PackIcon Kind="WindowRestore"
                                             Foreground="#ddd"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Width="25"
                                             Height="25"
                                             Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                </Grid>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.MaximizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="4"
                    Width="42"
                    ToolTip="{Loc CloseWindow}"
                    Cursor="Hand">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                     Value="{StaticResource MaroonColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                     Value="{StaticResource DarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <materialDesign:PackIcon Kind="WindowClose"
                                         Foreground="#ddd"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Width="25"
                                         Height="25"
                                         Margin="0,0,1,0" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
        </StackPanel>

    </Grid>
</UserControl>