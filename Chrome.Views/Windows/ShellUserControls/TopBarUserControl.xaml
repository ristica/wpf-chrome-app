<UserControl x:Class="Chrome.Views.Windows.ShellUserControls.TopBarUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Chrome.Views.Converters"
             Height="30"
             DataContext="{Binding}">
    <UserControl.Resources>
        <converters:WindowStateToVisibilityConverter x:Key="WindowStateToVisibilityConverter" />
        <converters:WindowStateToVisibilityReverseConverter x:Key="WindowStateToVisibilityReverseConverter" />
        <converters:ResizeModeToVisibilityConverter x:Key="ResizeModeToVisibilityConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Border x:Name="PART_ChromeTitleBar"
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{StaticResource DefaultBrush}"
                BorderBrush="{StaticResource TransparentBrush}"
                BorderThickness="0"
                CornerRadius="0"
                Margin="38,2,0,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction
                        Command="{Binding ViewModel.DragCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="15,0,0,0"
                       Foreground="{StaticResource ForegroundBrush}"
                       FontWeight="Bold">
                CRM Light
            </TextBlock>
        </Border>

        <StackPanel Grid.Row="0"
                    Grid.Column="1"
                    Orientation="Horizontal"
                    Margin="0,2,2,0">
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="0"
                    Width="42"
                    Margin="0,0,0,0"
                    Padding="0,0,0,5"
                    ToolTip="{Loc MinimizeWindow}"
                    Cursor="Hand"
                    Style="{StaticResource ToLightAnimatedBorder}">
                <materialDesign:PackIcon Kind="WindowMinimize"
                                         Foreground="{StaticResource ForegroundHoverBrush}"
                                         VerticalAlignment="Bottom"
                                         HorizontalAlignment="Center"
                                         Width="15"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="0"
                    Width="42"
                    Margin="0,0,0,0"
                    Cursor="Hand"
                    ToolTip="{Loc MaximizeWindow}"
                    Style="{StaticResource ToLightAnimatedBorder}"
                    Visibility="{Binding ViewModel.ResizeMode, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource ResizeModeToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <Grid>
                    <materialDesign:PackIcon Kind="WindowMaximize"
                                             Foreground="{StaticResource ForegroundHoverBrush}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Width="16"
                                             Height="16"
                                             Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    <materialDesign:PackIcon Kind="WindowRestore"
                                             Foreground="{StaticResource ForegroundHoverBrush}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Width="18"
                                             Height="18"
                                             Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                </Grid>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.MaximizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Border Background="{StaticResource DefaultBrush}"
                    CornerRadius="0,4,0,0"
                    Width="42"
                    ToolTip="{Loc CloseWindow}"
                    Cursor="Hand">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                     Value="{StaticResource CloseColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                     Value="{StaticResource PrimaryColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <materialDesign:PackIcon Kind="WindowClose"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Width="18"
                                         Height="18"
                                         Margin="0,0,1,0"
                                         Background="#03000000">
                    <materialDesign:PackIcon.Foreground>
                        <SolidColorBrush x:Name="MyBrush1"
                                         Color="{StaticResource SecondaryHoverColor}" />
                    </materialDesign:PackIcon.Foreground>
                    <materialDesign:PackIcon.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="MyBrush1"
                                                    Storyboard.TargetProperty="Color"
                                                    From="{StaticResource SecondaryHoverColor}"
                                                    To="{StaticResource PrimaryHoverColor}"
                                                    Duration="0:0:.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="MyBrush1"
                                                    Storyboard.TargetProperty="Color"
                                                    From="{StaticResource PrimaryHoverColor}"
                                                    To="{StaticResource SecondaryHoverColor}"
                                                    Duration="0:0:.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </materialDesign:PackIcon.Triggers>
                </materialDesign:PackIcon>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding ViewModel.CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
        </StackPanel>

    </Grid>
</UserControl>