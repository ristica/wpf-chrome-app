<Application x:Class="Chrome.Starter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Dark"
                                             PrimaryColor="LightBlue"
                                             SecondaryColor="LightGreen" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- METRO COLORS -->
            <Color x:Key="MetroBlueColor">#002D72</Color>
            <Color x:Key="MetroYellowColor">#FFE500</Color>
            <Color x:Key="NoColor">#00000000</Color>
            
            <SolidColorBrush x:Key="MetroBlueBrush"
                             Color="{StaticResource MetroBlueColor}" />
            <SolidColorBrush x:Key="MetroYellowBrush"
                             Color="{StaticResource MetroYellowColor}" />
            <SolidColorBrush x:Key="TransparentBrush"
                             Color="{StaticResource NoColor}" />

            <!-- MATERIAL PRIMARY HUES -->
            <SolidColorBrush x:Key="PrimaryHueLightBrush"
                             Color="#5495ff" />
            <SolidColorBrush x:Key="PrimaryHueMidBrush"
                             Color="#3B71CA" />
            <SolidColorBrush x:Key="PrimaryHueDarkBrush"
                             Color="#234c8f" />

            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush"
                             Color="#000000" />
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush"
                             Color="#FBFBFB" />
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush"
                             Color="#FBFBFB" />

            <!-- MATERIAL SECONDARY HUES -->
            <SolidColorBrush x:Key="SecondaryHueLightBrush"
                             Color="#D0D7E4" />
            <SolidColorBrush x:Key="SecondaryHueMidBrush"
                             Color="#9FA6B2" />
            <SolidColorBrush x:Key="SecondaryHueDarkBrush"
                             Color="#707783" />

            <SolidColorBrush x:Key="SecondaryHueLightForegroundBrush"
                             Color="#000000" />
            <SolidColorBrush x:Key="SecondaryHueMidForegroundBrush"
                             Color="#212121" />
            <SolidColorBrush x:Key="SecondaryHueDarkForegroundBrush"
                             Color="#FFFFFF" />

            <!-- SCROLL BARS -->
            <Style x:Key="ScrollThumbs"
                   TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Width="Auto"
                                           Height="Auto"
                                           Fill="Transparent" />
                                <Border x:Name="Rectangle1"
                                        CornerRadius="5"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Width="Auto"
                                        Height="Auto"
                                        Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                         Value="Horizontal">
                                    <Setter TargetName="Rectangle1"
                                            Property="Width"
                                            Value="Auto" />
                                    <Setter TargetName="Rectangle1"
                                            Property="Height"
                                            Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ScrollBar}"
                   TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="false" />
                <Setter Property="Foreground"
                        Value="#8C8C8C" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Width"
                        Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                                  Width="8"
                                  Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                                       Grid.Row="0"
                                       IsDirectionReversed="true"
                                       Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                               Background="{TemplateBinding Foreground}"
                                               Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                                      Command="ScrollBar.PageDownCommand"
                                                      Opacity="0"
                                                      Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                                      Command="ScrollBar.PageUpCommand"
                                                      Opacity="0"
                                                      Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                         Property="IsMouseOver"
                                         Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}"
                                            TargetName="Thumb"
                                            Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                         Property="IsDragging"
                                         Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}"
                                            TargetName="Thumb"
                                            Property="Background" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Thumb"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                         Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                            Value="Auto" />
                                    <Setter Property="Height"
                                            Value="8" />
                                    <Setter TargetName="Thumb"
                                            Property="Tag"
                                            Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                            Property="Command"
                                            Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                            Property="Command"
                                            Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>






            <!-- ******************   LIGHT THEME   *************************** -->

            <Color x:Key="PrimaryColor">#fbfbfb</Color>
            <Color x:Key="PrimaryHoverColor">#eeeeee</Color>
            <Color x:Key="SecondaryColor">#212121</Color>
            <Color x:Key="SecondaryHoverColor">#444444</Color>
            <Color x:Key="DefaultBackgroundTransparentColor">#4Dfbfbfb</Color>
            <Color x:Key="CloseColor">red</Color>

            <SolidColorBrush x:Key="DefaultBrush"
                             Color="{StaticResource PrimaryColor}" />
            <SolidColorBrush x:Key="DefaultHoverBrush"
                             Color="{StaticResource PrimaryHoverColor}" />
            <SolidColorBrush x:Key="ForegroundBrush"
                             Color="{StaticResource SecondaryColor}" />
            <SolidColorBrush x:Key="ForegroundHoverBrush"
                             Color="{StaticResource SecondaryHoverColor}" />
            <SolidColorBrush x:Key="DefaultBackgroundTransparentBrush" 
                             Color="{StaticResource DefaultBackgroundTransparentColor}" />

            <Style TargetType="Border"
                   x:Key="ToDarkAnimatedBorder">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryHoverColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border"
                   x:Key="ToLightAnimatedBorder">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="#cccccc" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="WindowTemplate"
                             TargetType="{x:Type Window}">
                <Border x:Name="WindowRoot"
                        CornerRadius="4"
                        BorderThickness="1"
                        BorderBrush="{StaticResource DefaultBrush}"
                        Background="#4D000000">
                    <Grid Margin="2"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0"
                                    Grid.Row="0"
                                    Background="{StaticResource MetroBlueBrush}"
                                    Padding="1"
                                    CornerRadius="4,0,0,0">
                                <Border BorderBrush="{StaticResource TransparentBrush}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Margin="1"
                                        HorizontalAlignment="Stretch"
                                        Width="30"
                                        Height="30">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Top"
                                               Text="M"
                                               Foreground="{StaticResource MetroYellowBrush}"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Margin="0,0,0,0" />
                                </Border>
                            </Border>
                            <Border x:Name="PART_ChromeTitleBar"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource DefaultBrush}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ViewModel.DragCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Text="{Binding  ViewModel.WindowTitle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                           Foreground="{StaticResource ForegroundBrush}"
                                           Margin="15,0,0,0" />
                            </Border>
                            <Border Grid.Column="2"
                                    Grid.Row="0"
                                    CornerRadius="0,4,0,0"
                                    MinWidth="100"
                                    Padding="2"
                                    Background="{StaticResource DefaultBrush}">
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Right">
                                    <Border Background="{StaticResource DefaultBrush}"
                                            CornerRadius="4"
                                            Width="32"
                                            Margin="0,0,4,0"
                                            Padding="0,10,0,9"
                                            ToolTip="{Loc MinimizeWindow}"
                                            Cursor="Hand"
                                            Style="{StaticResource ToLightAnimatedBorder}">
                                        <materialDesign:PackIcon Kind="WindowMinimize"
                                                                 Foreground="#ddd"
                                                                 VerticalAlignment="Bottom"
                                                                 Width="12"
                                                                 Height="2"
                                                                 HorizontalAlignment="Center"
                                                                 Background="{StaticResource ForegroundBrush}"
                                                                 Padding="0"
                                                                 Margin="0" />
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding ViewModel.MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                    <Border Background="{StaticResource DefaultBrush}"
                                            CornerRadius="4"
                                            Width="30"
                                            ToolTip="{Loc CloseWindow}"
                                            Cursor="Hand">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                                             Value="{StaticResource CloseColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                                             Value="{StaticResource PrimaryColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <materialDesign:PackIcon Kind="WindowClose"
                                                                 Foreground="{StaticResource ForegroundBrush}"
                                                                 VerticalAlignment="Center"
                                                                 HorizontalAlignment="Center"
                                                                 Width="20"
                                                                 Height="20"
                                                                 Margin="0,0,1,0" />
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding ViewModel.CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                </StackPanel>
                            </Border>

                        </Grid>

                        <Border Grid.Row="1"
                                Padding="0,1">
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Border>

                        <Border Grid.Row="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Padding="20,10"
                                Background="{StaticResource DefaultBrush}"
                                CornerRadius="0,0,4,4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="I'm a status bar"
                                           Margin="0, 0, 0, 0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{StaticResource ForegroundBrush}" />

                                <TextBlock Grid.Column="1"
                                           Text="20:08 16.02.2024"
                                           Margin="20, 0, 0, 0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Foreground="{StaticResource ForegroundBrush}" />

                            </Grid>
                        </Border>

                    </Grid>
                </Border>
            </ControlTemplate>
            <Style x:Key="SkinWindowStyle"
                   TargetType="Window">
                <Setter Property="WindowStyle"
                        Value="None" />
                <Setter Property="AllowsTransparency"
                        Value="True" />
                <Setter Property="ResizeMode"
                        Value="CanResize" />
                <Setter Property="MinWidth"
                        Value="600" />
                <Setter Property="MinHeight"
                        Value="300" />
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState}"
                                 Value="Maximized" />
                </Style.Triggers>
            </Style>

            <RadialGradientBrush x:Key="ContentRadialBackgroundBrush"
                                 GradientOrigin="0.5,0.5"
                                 Center="0.5,0.5"
                                 RadiusX="0.5"
                                 RadiusY="0.5">
                <RadialGradientBrush.GradientStops>
                    <GradientStop Color="#444444"
                                  Offset="0.0" />
                    <GradientStop Color="#999999"
                                  Offset="0.2" />
                    <GradientStop Color="#fbfbfb"
                                  Offset="1" />
                </RadialGradientBrush.GradientStops>
            </RadialGradientBrush>






            <!-- ******************   DARK THEME   *************************** -->

            <!--<Color x:Key="PrimaryColor">#212121</Color>
            <Color x:Key="PrimaryHoverColor">#333333</Color>
            <Color x:Key="SecondaryColor">#cccccc</Color>
            <Color x:Key="SecondaryHoverColor">#a9a9a9</Color>
            <Color x:Key="DefaultBackgroundTransparentColor">#4D212121</Color>
            
            <Color x:Key="CloseColor">#800000</Color>

            <SolidColorBrush x:Key="DefaultBrush"
                             Color="{StaticResource PrimaryColor}" />
            <SolidColorBrush x:Key="DefaultHoverBrush"
                             Color="{StaticResource PrimaryHoverColor}" />
            <SolidColorBrush x:Key="ForegroundBrush"
                             Color="{StaticResource SecondaryColor}" />
            <SolidColorBrush x:Key="ForegroundHoverBrush"
                             Color="{StaticResource SecondaryHoverColor}" />
            <SolidColorBrush x:Key="DefaultBackgroundTransparentBrush"
                             Color="{StaticResource DefaultBackgroundTransparentColor}" />

            <Style TargetType="Border"
                   x:Key="ToDarkAnimatedBorder">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryHoverColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border"
                   x:Key="ToLightAnimatedBorder">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryHoverColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.25"
                                                             Value="{StaticResource PrimaryColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="WindowTemplate"
                             TargetType="{x:Type Window}">
                <Border x:Name="WindowRoot"
                        CornerRadius="4"
                        BorderThickness="1"
                        BorderBrush="{StaticResource DefaultBrush}"
                        Background="#4D000000">
                    <Grid Margin="2"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0"
                                    Grid.Row="0"
                                    Background="{StaticResource MetroBlueBrush}"
                                    Padding="1"
                                    CornerRadius="4,0,0,0">
                                <Border BorderBrush="{StaticResource TransparentBrush}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Margin="1"
                                        HorizontalAlignment="Stretch"
                                        Width="30"
                                        Height="30">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Top"
                                               Text="M"
                                               Foreground="{StaticResource MetroYellowBrush}"
                                               FontSize="20"
                                               FontWeight="Bold" />
                                </Border>
                            </Border>
                            <Border x:Name="PART_ChromeTitleBar"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource DefaultBrush}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ViewModel.DragCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Text="{Binding  ViewModel.WindowTitle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                           Foreground="{StaticResource ForegroundBrush}"
                                           Margin="10,0,0,0" />
                            </Border>
                            <Border Grid.Column="2"
                                    Grid.Row="0"
                                    CornerRadius="0,4,0,0"
                                    MinWidth="100"
                                    Padding="2"
                                    Background="{StaticResource DefaultBrush}">
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Right">
                                    <Border Background="{StaticResource DefaultBrush}"
                                            CornerRadius="4"
                                            Width="32"
                                            Margin="0,0,4,0"
                                            Padding="0,10,0,9"
                                            ToolTip="{Loc MinimizeWindow}"
                                            Cursor="Hand"
                                            Style="{StaticResource ToLightAnimatedBorder}">
                                        <materialDesign:PackIcon Kind="WindowMinimize"
                                                                 Foreground="#ddd"
                                                                 VerticalAlignment="Bottom"
                                                                 Width="12"
                                                                 Height="2"
                                                                 HorizontalAlignment="Center"
                                                                 Background="{StaticResource ForegroundBrush}"
                                                                 Padding="0"
                                                                 Margin="0" />
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding ViewModel.MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>                                    
                                    <Border Background="{StaticResource DefaultBrush}"
                                            CornerRadius="4"
                                            Width="30"
                                            ToolTip="{Loc CloseWindow}"
                                            Cursor="Hand">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                                             Value="{StaticResource CloseColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                                             Value="{StaticResource PrimaryColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <materialDesign:PackIcon Kind="WindowClose"
                                                                 Foreground="{StaticResource ForegroundBrush}"
                                                                 VerticalAlignment="Center"
                                                                 HorizontalAlignment="Center"
                                                                 Width="20"
                                                                 Height="20"
                                                                 Margin="0,0,1,0" />
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding ViewModel.CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                </StackPanel>
                            </Border>

                        </Grid>

                        <Border Grid.Row="1"
                                Padding="0,1">
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Border>

                        <Border Grid.Row="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Padding="20,10"
                                Background="{StaticResource DefaultBrush}"
                                CornerRadius="0,0,4,4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="I'm a status bar"
                                           Margin="0, 0, 0, 0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{StaticResource ForegroundBrush}" />

                                <TextBlock Grid.Column="1"
                                           Text="20:08 16.02.2024"
                                           Margin="20, 0, 0, 0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Foreground="{StaticResource ForegroundBrush}" />

                            </Grid>
                        </Border>

                    </Grid>
                </Border>
            </ControlTemplate>
            <Style x:Key="SkinWindowStyle"
                   TargetType="Window">
                <Setter Property="WindowStyle"
                        Value="None" />
                <Setter Property="AllowsTransparency"
                        Value="True" />
                <Setter Property="ResizeMode"
                        Value="CanResize" />
                <Setter Property="MinWidth"
                        Value="600" />
                <Setter Property="MinHeight"
                        Value="300" />
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState}"
                                 Value="Maximized" />
                </Style.Triggers>
            </Style>-->


        </ResourceDictionary>

    </Application.Resources>
</Application>
    
    
    
    
    <!--
    
    <Border Background="{StaticResource DefaultBrush}"
        CornerRadius="4"
        Width="46"
        Margin="0,0,4,0"
        Cursor="Hand"
        ToolTip="{Loc MaximizeWindow}"
        Style="{StaticResource ToLightAnimatedBorder}"
        Visibility="{Binding ViewModel.ResizeMode, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource ResizeModeToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
    <Grid>
        <materialDesign:PackIcon Kind="WindowMaximize"
                                 Foreground="#ddd"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center"
                                 Width="25"
                                 Height="25"
                                 Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityReverseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        <materialDesign:PackIcon Kind="WindowRestore"
                                 Foreground="#ddd"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center"
                                 Width="25"
                                 Height="25"
                                 Visibility="{Binding ViewModel.CurrentWindowState, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource WindowStateToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding ViewModel.MaximizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Border>
    
    -->